allgrowth4=as.data.frame(t(allgrowth4))
allgrowth_F=read.csv('crossfeeding/FACS/030419_4strains_growth_redo/FACS_summary_cell_count_Flavo_redo_summary_R.csv',header=F)
rownames(allgrowth_F)=allgrowth_F$V1
allgrowth_F$V1=NULL
allgrowth_F=as.data.frame(t(allgrowth_F))
allgrowth_F_melt=melt(allgrowth_F,id=c('sample','replicate'))
names(allgrowth_F_melt)=c('sample','replicate','time','cell_count')
allgrowth_F_melt=allgrowth_F_melt[,c("time",'replicate',"sample","cell_count")]
allgrowth_F_melt$media=unlist(lapply(strsplit(as.character(allgrowth_F_melt$sample),"-"),function(x) x[1]))
allgrowth_F_melt$substrate=unlist(lapply(strsplit(as.character(allgrowth_F_melt$sample),"-"),function(x) x[2]))
allgrowth_F_melt$taxa=unlist(lapply(strsplit(as.character(allgrowth_F_melt$sample),"-"),function(x) x[3]))
allgrowth_F_melt=na.omit(allgrowth_F_melt)
allgrowth_F_melt=allgrowth_F_melt %>% filter(cell_count!="")
allgrowth7_melt=melt(allgrowth7,id=c('time','replicate'))
names(allgrowth7_melt)=c('time','replicate','sample','cell_count')
allgrowth7_melt$media=unlist(lapply(strsplit(as.character(allgrowth7_melt$sample),"-"),function(x) x[1]))
allgrowth7_melt$substrate=unlist(lapply(strsplit(as.character(allgrowth7_melt$sample),"-"),function(x) x[2]))
allgrowth7_melt$taxa=unlist(lapply(strsplit(as.character(allgrowth7_melt$sample),"-"),function(x) x[3]))
allgrowth7_melt=na.omit(allgrowth7_melt)
allgrowth4_melt=melt(allgrowth4,id=c('time','replicate'))
names(allgrowth4_melt)=c('time','replicate','sample','cell_count')
allgrowth4_melt$media=unlist(lapply(strsplit(as.character(allgrowth4_melt$sample),"-"),function(x) x[1]))
allgrowth4_melt$substrate=unlist(lapply(strsplit(as.character(allgrowth4_melt$sample),"-"),function(x) x[2]))
allgrowth4_melt$taxa=unlist(lapply(strsplit(as.character(allgrowth4_melt$sample),"-"),function(x) x[3]))
allgrowth4_melt=na.omit(allgrowth4_melt)
allgrowth11_melt=rbind(allgrowth7_melt,allgrowth4_melt,allgrowth_F_melt)
allgrowth11_melt$time=as.numeric(allgrowth11_melt$time)
#allgrowth11_melt$substrate=as.factor(allgrowth11_melt$substrate)
allgrowth11_melt$cell_count=as.numeric(allgrowth11_melt$cell_count)
allgrowth11_melt_average=allgrowth11_melt %>% group_by(.dots=c("time","substrate","taxa")) %>% summarise(mean_cc=mean(cell_count),sd_cc=sd(cell_count)) %>% filter(taxa!='Vib1.S')
p_growth_curves<- ggplot(allgrowth11_melt_average, aes(x=time, y=mean_cc)) +
geom_line(aes(x=time, y=mean_cc,color=substrate,group=substrate),size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
geom_errorbar(aes(ymin=mean_cc-sd_cc, ymax=mean_cc+sd_cc,color=substrate),width=0,size=1)+
geom_point(size=1.5,aes(x=time, y=mean_cc,fill=taxa,color=substrate),shape=21)+
scale_fill_manual(values=ASV11palette)+
facet_wrap(vars(taxa),nrow=3,scales = "free")+theme_bw()+ylab('Cells/mL')+xlab('time/h')+
theme(legend.position = "bottom",axis.text=element_text(size=12),legend.text = element_text(size=12),axis.title=element_text(size=14))+
guides(fill=guide_legend(nrow=2,byrow=TRUE))+scale_x_continuous(trans='log2')
png('Figures_compiled/growth_curves/all_growth_curves_compiled.png',width = 3000,height = 2000,res=300)
p_growth_curves
dev.off()
ASV5_list_short=c('Vibrio1','Psychro14','Halo10','Oceano4','Flavo71')
allgrowth_melt_average_5s=allgrowth11_melt_average %>% filter(taxa %in% ASV5_list_short) %>% filter(!time %in% c(44,48))
allgrowth_melt_average_5s$taxa=factor(allgrowth_melt_average_5s$taxa,levels=ASV5_list_short)
p_growth_curves_5s<- ggplot(allgrowth_melt_average_5s, aes(x=time, y=mean_cc)) +
geom_line(aes(x=time, y=mean_cc,color=substrate,group=substrate),size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
geom_errorbar(aes(ymin=mean_cc-sd_cc, ymax=mean_cc+sd_cc,color=substrate),width=0,size=1)+
geom_point(size=1.5,aes(x=time, y=mean_cc,fill=taxa,color=substrate),shape=21)+
scale_fill_manual(values=ASV5palette)+
facet_wrap(vars(taxa),nrow=5,scales = "free")+theme_bw()+ylab('Cells/mL')+xlab('time/h')+
theme(legend.position = "top",axis.text=element_text(size=12),legend.text = element_text(size=12),axis.title=element_text(size=14))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))#+scale_x_continuous(trans='log2')
p_growth_curves_5s_log<- ggplot(allgrowth_melt_average_5s, aes(x=time, y=mean_cc)) +
geom_line(aes(x=time, y=mean_cc,color=substrate,group=substrate),size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
geom_errorbar(aes(ymin=mean_cc-sd_cc, ymax=mean_cc+sd_cc,color=substrate),width=0,size=1)+
geom_point(size=1.5,aes(x=time, y=mean_cc,fill=taxa,color=substrate),shape=21)+
scale_fill_manual(values=ASV5palette)+
facet_wrap(vars(taxa),nrow=1)+theme_bw()+ylab('Cells/mL')+
theme(legend.position = "top",axis.text=element_text(size=12))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))+scale_y_continuous(trans='log10')
png('Figures_compiled/growth_curves/5strains_growth_vertical.png',height=2000,width=1600,res=300)
p_growth_curves_5s
dev.off()
png('Figures_compiled/growth_curves/5strains_growth_logy.png',height=800,width=3000,res=300)
p_growth_curves_5s_log
dev.off()
p_growth_curves_5s<- ggplot(allgrowth_melt_average_5s, aes(x=time, y=mean_cc)) +
geom_line(aes(x=time, y=mean_cc,color=substrate,group=substrate),size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
geom_errorbar(aes(ymin=mean_cc-sd_cc, ymax=mean_cc+sd_cc,color=substrate),width=0,size=1)+
geom_point(size=1.5,aes(x=time, y=mean_cc,fill=taxa,color=substrate),shape=21)+
scale_fill_manual(values=ASV5palette)+
facet_wrap(vars(taxa),nrow=1,scales = "free")+theme_bw()+ylab('Cells/mL')+xlab('time/h')+
theme(legend.position = "top",axis.text=element_text(size=12),legend.text = element_text(size=12),axis.title=element_text(size=14))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))+scale_x_continuous(trans='log2')
png('Figures_compiled/growth_curves/5strains_growth_vertical.png',height=800,width=3000,res=300)
p_growth_curves_5s
dev.off()
png('Figures_compiled/growth_curves/5strains_growth.png',height=800,width=3000,res=300)
p_growth_curves_5s
dev.off()
p_growth_curves_5s_vertical<- ggplot(allgrowth_melt_average_5s, aes(x=time, y=mean_cc)) +
geom_line(aes(x=time, y=mean_cc,color=substrate,group=substrate),size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
geom_errorbar(aes(ymin=mean_cc-sd_cc, ymax=mean_cc+sd_cc,color=substrate),width=0,size=1)+
geom_point(size=1.5,aes(x=time, y=mean_cc,fill=taxa,color=substrate),shape=21)+
scale_fill_manual(values=ASV5palette)+
facet_wrap(vars(taxa),nrow=5,scales = "free")+theme_bw()+ylab('Cells/mL')+xlab('time/h')+
theme(legend.position = "top",axis.text=element_text(size=12),legend.text = element_text(size=12),axis.title=element_text(size=14))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))#+scale_x_continuous(trans='log2')
p_growth_curves_5s_logx<- ggplot(allgrowth_melt_average_5s, aes(x=time, y=mean_cc)) +
geom_line(aes(x=time, y=mean_cc,color=substrate,group=substrate),size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
geom_errorbar(aes(ymin=mean_cc-sd_cc, ymax=mean_cc+sd_cc,color=substrate),width=0,size=1)+
geom_point(size=1.5,aes(x=time, y=mean_cc,fill=taxa,color=substrate),shape=21)+
scale_fill_manual(values=ASV5palette)+
facet_wrap(vars(taxa),nrow=1,scales = "free")+theme_bw()+ylab('Cells/mL')+xlab('time/h')+
theme(legend.position = "top",axis.text=element_text(size=12),legend.text = element_text(size=12),axis.title=element_text(size=14))+
guides(fill=guide_legend(nrow=1,byrow=TRUE))+scale_x_continuous(trans='log2')
png('Figures_compiled/growth_curves/5strains_growth.png',height=800,width=3000,res=300)
p_growth_curves_5s_logx
dev.off()
png('Figures_compiled/growth_curves/5strains_vertical.png',height=2400,width=800,res=300)
p_growth_curves_5s_vertical
dev.off()
png('Figures_compiled/growth_curves/5strains_vertical.png',height=2400,width=1600,res=300)
p_growth_curves_5s_vertical
dev.off()
allgrowth_melt_5s_no_Vibrio=allgrowth11_melt %>% filter(taxa %in% ASV5_list_short) %>% filter(!(taxa=='Flavo71' & time==16) ) %>%
filter(taxa!='Vibrio1')%>% filter(!time==8)
allgrowth_melt_5s_Vibrio=allgrowth11_melt %>% filter(taxa=='Vibrio1') %>% filter(!time==8)
allgrowth_splitted_5s_no_Vibrio <- multisplit(allgrowth_melt_5s_no_Vibrio, c("taxa","replicate","substrate"))
coef_5s_no_Vib=list()
names_coef_5s_no_Vib=list()
png('Figures_compiled/five_strains_linear_growth_fits_log.png',width=2500,height=1200,res=100)
par(mfrow=c(6,5))
for (i in 1:length(allgrowth_splitted_5s_no_Vibrio)){
dat=allgrowth_splitted_5s_no_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=5,q=0.95)
if (rsquared(fit)>0.9){
coef_5s_no_Vib[[i]]=coef(fit)}
else{
coef_5s_no_Vib[[i]]=c(0,0,0,0)
}
names_coef_5s_no_Vib[[i]]=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
allgrowth_splitted_5s_Vibrio <- multisplit(allgrowth_melt_5s_Vibrio, c("taxa","replicate","substrate"))
coef_5s_Vib=list()
names_coef_5s_Vib=list()
png('Figures_compiled/five_strains_linear_growth_fits_log_Vibrio.png',width=600,height=1200,res=100)
par(mfrow=c(6,1))
for (i in 1:length(allgrowth_splitted_5s_Vibrio)){
dat=allgrowth_splitted_5s_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=5,q=0.95)
if (rsquared(fit)>0.9){
coef_5s_Vib[[i]]=coef(fit)}
else{
coef_5s[[i]]=c(0,0,0,0)
}
names_coef_5s_Vib[[i]]=allgrowth_splitted_5s_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
coef_5s=append(coef_5s_no_Vib,coef_5s_Vib)
names_coef_5s=append(names_coef_5s_no_Vib,names_coef_5s_Vib)
growthrate_coef_matrix_5s=do.call(rbind.data.frame,coef_5s)
rownames_growthrate_coef_matrix_5s=unlist(names_coef_5s)
growthrate_coef_matrix_5s_1=cbind(growthrate_coef_matrix_5s,rownames_growthrate_coef_matrix_5s)
names(growthrate_coef_matrix_5s_1)=c('y0','y0_lm','mumax','lag','sample')
growthrate_coef_matrix_5s_1=growthrate_coef_matrix_5s_1[rowSums(growthrate_coef_matrix_5s_1[,1:4])!=0,]
growthrate_coef_matrix_5s_1$sample=as.character(growthrate_coef_matrix_5s_1$sample)
growthrate_coef_matrix_5s_agg=growthrate_coef_matrix_5s_1 %>% group_by(sample) %>% summarise(mean_mumax=mean(mumax),sd_mumax=sd(mumax))
growthrate_coef_matrix_5s_agg$substrate=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",2)
growthrate_coef_matrix_5s_agg$taxa=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",3)
growthrate_coef_matrix_5s_agg$taxa=factor(growthrate_coef_matrix_5s_agg$taxa,levels=ASV5_list_short)
growthrate_coef_matrix_5s_agg=rbind(growthrate_coef_matrix_5s_agg,c('TRMM-Man-Flavo71',0,0,'Man','Flavo71'))
growthrate_coef_matrix_5s_agg$mean_mumax=as.numeric(growthrate_coef_matrix_5s_agg$mean_mumax)
growthrate_coef_matrix_5s_agg$sd_mumax=as.numeric(growthrate_coef_matrix_5s_agg$sd_mumax)
growthrate_coef_matrix_5s_diff=growthrate_coef_matrix_5s_agg %>% group_by(taxa) %>% summarize(diff_mean_mumax=mean_mumax[1]-mean_mumax[2],sd_sd_mumax=(sd_mumax[1]^2+sd_mumax[2]^2)^0.5,
ratio_mean_mumax=mean_mumax[1]/mean_mumax[2],percent_error_squared=((sd_mumax[1]/mean_mumax[1])^2+(sd_mumax[2]/mean_mumax[2])^2)^0.5) #[1] is FE, [2] is Man
growthrate_coef_matrix_5s_diff$sd_ratio_mumax=growthrate_coef_matrix_5s_diff$ratio_mean_mumax*growthrate_coef_matrix_5s_diff$percent_error_squared
growthrate_coef_matrix_5s_diff_ratio=growthrate_coef_matrix_5s_diff %>% filter(taxa!='Flavo71')
p_5s_growth=ggplot(growthrate_coef_matrix_5s_agg)+
geom_bar(aes(fill=taxa,color=substrate, y=mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = mean_mumax + sd_mumax, ymin = mean_mumax-sd_mumax,x=taxa,color=substrate),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
scale_fill_manual(values=ASV5palette)+
facet_wrap(~substrate,nrow=1)+ylab('max per capita growth rate /h')+xlab("")+theme_bw()+
theme(legend.position = "bottom",panel.spacing.x=unit(1, "lines"),axis.text.x=element_text(size=12,angle = 45,vjust = 1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
p_5s_growth_ratio=ggplot(growthrate_coef_matrix_5s_diff_ratio)+
geom_bar(aes(fill=taxa, y=ratio_mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = ratio_mean_mumax + sd_ratio_mumax, ymin = ratio_mean_mumax-sd_ratio_mumax,x=taxa,color=taxa),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=ASV5palette)+
scale_fill_manual(values=ASV5palette)+
geom_hline(aes(yintercept=1), color="black", linetype="dashed")+
ylab('Ratio of max.growth rate\n(FE to Mannitol)')+xlab("")+theme_bw()+
theme(legend.position = "none",axis.text.x=element_text(size=12,angle = 45,vjust=1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
png('Figures_compiled/growth_curves/max_growth_rate_summary_5s.png',width =2600,height=1100,res=300)
p_5s_growth
dev.off()
png('Figures_compiled/growth_curves/max_growth_rate_ratio_5s.png',width =1200,height=1000,res=300)
p_5s_growth_ratio
dev.off()
allgrowth_melt_5s_max=allgrowth_melt_5s %>% group_by(.dots=c("taxa","substrate","replicate")) %>%  summarise(max_cc=max(cell_count))
coef_5s
png('Figures_compiled/five_strains_linear_growth_fits_log.png',width=2500,height=1200,res=100)
par(mfrow=c(6,5))
for (i in 1:length(allgrowth_splitted_5s_no_Vibrio)){
dat=allgrowth_splitted_5s_no_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=6,q=0.95)
if (rsquared(fit)>0.85){
coef_5s_no_Vib[[i]]=coef(fit)}
else{
coef_5s_no_Vib[[i]]=c(0,0,0,0)
}
names_coef_5s_no_Vib[[i]]=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
allgrowth_splitted_5s_Vibrio <- multisplit(allgrowth_melt_5s_Vibrio, c("taxa","replicate","substrate"))
coef_5s_Vib=list()
names_coef_5s_Vib=list()
png('Figures_compiled/five_strains_linear_growth_fits_log_Vibrio.png',width=600,height=1200,res=100)
par(mfrow=c(6,1))
for (i in 1:length(allgrowth_splitted_5s_Vibrio)){
dat=allgrowth_splitted_5s_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=5,q=0.95)
if (rsquared(fit)>0.9){
coef_5s_Vib[[i]]=coef(fit)}
else{
coef_5s[[i]]=c(0,0,0,0)
}
names_coef_5s_Vib[[i]]=allgrowth_splitted_5s_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
coef_5s=append(coef_5s_no_Vib,coef_5s_Vib)
names_coef_5s=append(names_coef_5s_no_Vib,names_coef_5s_Vib)
growthrate_coef_matrix_5s=do.call(rbind.data.frame,coef_5s)
rownames_growthrate_coef_matrix_5s=unlist(names_coef_5s)
growthrate_coef_matrix_5s_1=cbind(growthrate_coef_matrix_5s,rownames_growthrate_coef_matrix_5s)
names(growthrate_coef_matrix_5s_1)=c('y0','y0_lm','mumax','lag','sample')
growthrate_coef_matrix_5s_1=growthrate_coef_matrix_5s_1[rowSums(growthrate_coef_matrix_5s_1[,1:4])!=0,]
growthrate_coef_matrix_5s_1$sample=as.character(growthrate_coef_matrix_5s_1$sample)
growthrate_coef_matrix_5s_agg=growthrate_coef_matrix_5s_1 %>% group_by(sample) %>% summarise(mean_mumax=mean(mumax),sd_mumax=sd(mumax))
growthrate_coef_matrix_5s_agg$substrate=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",2)
growthrate_coef_matrix_5s_agg$taxa=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",3)
growthrate_coef_matrix_5s_agg$taxa=factor(growthrate_coef_matrix_5s_agg$taxa,levels=ASV5_list_short)
growthrate_coef_matrix_5s_agg=rbind(growthrate_coef_matrix_5s_agg,c('TRMM-Man-Flavo71',0,0,'Man','Flavo71'))
growthrate_coef_matrix_5s_agg$mean_mumax=as.numeric(growthrate_coef_matrix_5s_agg$mean_mumax)
growthrate_coef_matrix_5s_agg$sd_mumax=as.numeric(growthrate_coef_matrix_5s_agg$sd_mumax)
growthrate_coef_matrix_5s_diff=growthrate_coef_matrix_5s_agg %>% group_by(taxa) %>% summarize(diff_mean_mumax=mean_mumax[1]-mean_mumax[2],sd_sd_mumax=(sd_mumax[1]^2+sd_mumax[2]^2)^0.5,
ratio_mean_mumax=mean_mumax[1]/mean_mumax[2],percent_error_squared=((sd_mumax[1]/mean_mumax[1])^2+(sd_mumax[2]/mean_mumax[2])^2)^0.5) #[1] is FE, [2] is Man
growthrate_coef_matrix_5s_diff$sd_ratio_mumax=growthrate_coef_matrix_5s_diff$ratio_mean_mumax*growthrate_coef_matrix_5s_diff$percent_error_squared
growthrate_coef_matrix_5s_diff_ratio=growthrate_coef_matrix_5s_diff %>% filter(taxa!='Flavo71')
p_5s_growth=ggplot(growthrate_coef_matrix_5s_agg)+
geom_bar(aes(fill=taxa,color=substrate, y=mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = mean_mumax + sd_mumax, ymin = mean_mumax-sd_mumax,x=taxa,color=substrate),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
scale_fill_manual(values=ASV5palette)+
facet_wrap(~substrate,nrow=1)+ylab('max per capita growth rate /h')+xlab("")+theme_bw()+
theme(legend.position = "bottom",panel.spacing.x=unit(1, "lines"),axis.text.x=element_text(size=12,angle = 45,vjust = 1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
p_5s_growth_ratio=ggplot(growthrate_coef_matrix_5s_diff_ratio)+
geom_bar(aes(fill=taxa, y=ratio_mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = ratio_mean_mumax + sd_ratio_mumax, ymin = ratio_mean_mumax-sd_ratio_mumax,x=taxa,color=taxa),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=ASV5palette)+
scale_fill_manual(values=ASV5palette)+
geom_hline(aes(yintercept=1), color="black", linetype="dashed")+
ylab('Ratio of max.growth rate\n(FE to Mannitol)')+xlab("")+theme_bw()+
theme(legend.position = "none",axis.text.x=element_text(size=12,angle = 45,vjust=1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
png('Figures_compiled/growth_curves/max_growth_rate_summary_5s.png',width =2600,height=1100,res=300)
p_5s_growth
dev.off()
png('Figures_compiled/growth_curves/max_growth_rate_ratio_5s.png',width =1200,height=1000,res=300)
p_5s_growth_ratio
dev.off()
png('Figures_compiled/growth_curves/five_strains_linear_growth_fits_log.png',width=2500,height=1200,res=100)
par(mfrow=c(6,5))
for (i in 1:length(allgrowth_splitted_5s_no_Vibrio)){
dat=allgrowth_splitted_5s_no_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=6,q=0.95)
if (rsquared(fit)>0.85){
coef_5s_no_Vib[[i]]=coef(fit)}
else{
coef_5s_no_Vib[[i]]=c(0,0,0,0)
}
names_coef_5s_no_Vib[[i]]=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
allgrowth_splitted_5s_Vibrio <- multisplit(allgrowth_melt_5s_Vibrio, c("taxa","replicate","substrate"))
coef_5s_Vib=list()
names_coef_5s_Vib=list()
png('Figures_compiled/growth_curves/five_strains_linear_growth_fits_log_Vibrio.png',width=600,height=1200,res=100)
par(mfrow=c(6,1))
for (i in 1:length(allgrowth_splitted_5s_Vibrio)){
dat=allgrowth_splitted_5s_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=5,q=0.95)
if (rsquared(fit)>0.9){
coef_5s_Vib[[i]]=coef(fit)}
else{
coef_5s[[i]]=c(0,0,0,0)
}
names_coef_5s_Vib[[i]]=allgrowth_splitted_5s_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
png('Figures_compiled/growth_curves/five_strains_linear_growth_fits_log.png',width=2500,height=1200,res=100)
par(mfrow=c(6,5))
for (i in 1:length(allgrowth_splitted_5s_no_Vibrio)){
dat=allgrowth_splitted_5s_no_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=5,q=0.95)
if (rsquared(fit)>0.85){
coef_5s_no_Vib[[i]]=coef(fit)}
else{
coef_5s_no_Vib[[i]]=c(0,0,0,0)
}
names_coef_5s_no_Vib[[i]]=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
allgrowth_splitted_5s_Vibrio <- multisplit(allgrowth_melt_5s_Vibrio, c("taxa","replicate","substrate"))
coef_5s_Vib=list()
names_coef_5s_Vib=list()
png('Figures_compiled/growth_curves/five_strains_linear_growth_fits_log_Vibrio.png',width=600,height=1200,res=100)
par(mfrow=c(6,1))
for (i in 1:length(allgrowth_splitted_5s_Vibrio)){
dat=allgrowth_splitted_5s_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=5,q=0.95)
if (rsquared(fit)>0.9){
coef_5s_Vib[[i]]=coef(fit)}
else{
coef_5s[[i]]=c(0,0,0,0)
}
names_coef_5s_Vib[[i]]=allgrowth_splitted_5s_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
coef_5s=append(coef_5s_no_Vib,coef_5s_Vib)
names_coef_5s=append(names_coef_5s_no_Vib,names_coef_5s_Vib)
growthrate_coef_matrix_5s=do.call(rbind.data.frame,coef_5s)
rownames_growthrate_coef_matrix_5s=unlist(names_coef_5s)
growthrate_coef_matrix_5s_1=cbind(growthrate_coef_matrix_5s,rownames_growthrate_coef_matrix_5s)
names(growthrate_coef_matrix_5s_1)=c('y0','y0_lm','mumax','lag','sample')
growthrate_coef_matrix_5s_1=growthrate_coef_matrix_5s_1[rowSums(growthrate_coef_matrix_5s_1[,1:4])!=0,]
growthrate_coef_matrix_5s_1$sample=as.character(growthrate_coef_matrix_5s_1$sample)
growthrate_coef_matrix_5s_agg=growthrate_coef_matrix_5s_1 %>% group_by(sample) %>% summarise(mean_mumax=mean(mumax),sd_mumax=sd(mumax))
growthrate_coef_matrix_5s_agg$substrate=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",2)
growthrate_coef_matrix_5s_agg$taxa=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",3)
growthrate_coef_matrix_5s_agg$taxa=factor(growthrate_coef_matrix_5s_agg$taxa,levels=ASV5_list_short)
growthrate_coef_matrix_5s_agg=rbind(growthrate_coef_matrix_5s_agg,c('TRMM-Man-Flavo71',0,0,'Man','Flavo71'))
growthrate_coef_matrix_5s_agg$mean_mumax=as.numeric(growthrate_coef_matrix_5s_agg$mean_mumax)
growthrate_coef_matrix_5s_agg$sd_mumax=as.numeric(growthrate_coef_matrix_5s_agg$sd_mumax)
growthrate_coef_matrix_5s_diff=growthrate_coef_matrix_5s_agg %>% group_by(taxa) %>% summarize(diff_mean_mumax=mean_mumax[1]-mean_mumax[2],sd_sd_mumax=(sd_mumax[1]^2+sd_mumax[2]^2)^0.5,
ratio_mean_mumax=mean_mumax[1]/mean_mumax[2],percent_error_squared=((sd_mumax[1]/mean_mumax[1])^2+(sd_mumax[2]/mean_mumax[2])^2)^0.5) #[1] is FE, [2] is Man
growthrate_coef_matrix_5s_diff$sd_ratio_mumax=growthrate_coef_matrix_5s_diff$ratio_mean_mumax*growthrate_coef_matrix_5s_diff$percent_error_squared
growthrate_coef_matrix_5s_diff_ratio=growthrate_coef_matrix_5s_diff %>% filter(taxa!='Flavo71')
p_5s_growth=ggplot(growthrate_coef_matrix_5s_agg)+
geom_bar(aes(fill=taxa,color=substrate, y=mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = mean_mumax + sd_mumax, ymin = mean_mumax-sd_mumax,x=taxa,color=substrate),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
scale_fill_manual(values=ASV5palette)+
facet_wrap(~substrate,nrow=1)+ylab('max per capita growth rate /h')+xlab("")+theme_bw()+
theme(legend.position = "bottom",panel.spacing.x=unit(1, "lines"),axis.text.x=element_text(size=12,angle = 45,vjust = 1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
p_5s_growth_ratio=ggplot(growthrate_coef_matrix_5s_diff_ratio)+
geom_bar(aes(fill=taxa, y=ratio_mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = ratio_mean_mumax + sd_ratio_mumax, ymin = ratio_mean_mumax-sd_ratio_mumax,x=taxa,color=taxa),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=ASV5palette)+
scale_fill_manual(values=ASV5palette)+
geom_hline(aes(yintercept=1), color="black", linetype="dashed")+
ylab('Ratio of max.growth rate\n(FE to Mannitol)')+xlab("")+theme_bw()+
theme(legend.position = "none",axis.text.x=element_text(size=12,angle = 45,vjust=1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
png('Figures_compiled/growth_curves/max_growth_rate_summary_5s.png',width =2600,height=1100,res=300)
p_5s_growth
dev.off()
png('Figures_compiled/growth_curves/max_growth_rate_ratio_5s.png',width =1200,height=1000,res=300)
p_5s_growth_ratio
dev.off()
png('Figures_compiled/growth_curves/five_strains_linear_growth_fits_log.png',width=2500,height=1200,res=100)
par(mfrow=c(6,5))
for (i in 1:length(allgrowth_splitted_5s_no_Vibrio)){
dat=allgrowth_splitted_5s_no_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=4,q=0.95)
if (rsquared(fit)>0.85){
coef_5s_no_Vib[[i]]=coef(fit)}
else{
coef_5s_no_Vib[[i]]=c(0,0,0,0)
}
names_coef_5s_no_Vib[[i]]=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_no_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
allgrowth_splitted_5s_Vibrio <- multisplit(allgrowth_melt_5s_Vibrio, c("taxa","replicate","substrate"))
coef_5s_Vib=list()
names_coef_5s_Vib=list()
png('Figures_compiled/growth_curves/five_strains_linear_growth_fits_log_Vibrio.png',width=600,height=1200,res=100)
par(mfrow=c(6,1))
for (i in 1:length(allgrowth_splitted_5s_Vibrio)){
dat=allgrowth_splitted_5s_Vibrio[[i]]
fit <- fit_easylinear(dat$time, dat$cell_count,h=5,q=0.95)
if (rsquared(fit)>0.9){
coef_5s_Vib[[i]]=coef(fit)}
else{
coef_5s[[i]]=c(0,0,0,0)
}
names_coef_5s_Vib[[i]]=allgrowth_splitted_5s_Vibrio[[i]]$sample[1]
plot(fit,main=allgrowth_splitted_5s_Vibrio[[i]]$sample[1],log='y')
}
dev.off()
coef_5s=append(coef_5s_no_Vib,coef_5s_Vib)
names_coef_5s=append(names_coef_5s_no_Vib,names_coef_5s_Vib)
growthrate_coef_matrix_5s=do.call(rbind.data.frame,coef_5s)
rownames_growthrate_coef_matrix_5s=unlist(names_coef_5s)
growthrate_coef_matrix_5s_1=cbind(growthrate_coef_matrix_5s,rownames_growthrate_coef_matrix_5s)
names(growthrate_coef_matrix_5s_1)=c('y0','y0_lm','mumax','lag','sample')
growthrate_coef_matrix_5s_1=growthrate_coef_matrix_5s_1[rowSums(growthrate_coef_matrix_5s_1[,1:4])!=0,]
growthrate_coef_matrix_5s_1$sample=as.character(growthrate_coef_matrix_5s_1$sample)
growthrate_coef_matrix_5s_agg=growthrate_coef_matrix_5s_1 %>% group_by(sample) %>% summarise(mean_mumax=mean(mumax),sd_mumax=sd(mumax))
growthrate_coef_matrix_5s_agg$substrate=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",2)
growthrate_coef_matrix_5s_agg$taxa=sapply(strsplit(growthrate_coef_matrix_5s_agg$sample,"-"),"[[",3)
growthrate_coef_matrix_5s_agg$taxa=factor(growthrate_coef_matrix_5s_agg$taxa,levels=ASV5_list_short)
growthrate_coef_matrix_5s_agg=rbind(growthrate_coef_matrix_5s_agg,c('TRMM-Man-Flavo71',0,0,'Man','Flavo71'))
growthrate_coef_matrix_5s_agg$mean_mumax=as.numeric(growthrate_coef_matrix_5s_agg$mean_mumax)
growthrate_coef_matrix_5s_agg$sd_mumax=as.numeric(growthrate_coef_matrix_5s_agg$sd_mumax)
growthrate_coef_matrix_5s_diff=growthrate_coef_matrix_5s_agg %>% group_by(taxa) %>% summarize(diff_mean_mumax=mean_mumax[1]-mean_mumax[2],sd_sd_mumax=(sd_mumax[1]^2+sd_mumax[2]^2)^0.5,
ratio_mean_mumax=mean_mumax[1]/mean_mumax[2],percent_error_squared=((sd_mumax[1]/mean_mumax[1])^2+(sd_mumax[2]/mean_mumax[2])^2)^0.5) #[1] is FE, [2] is Man
growthrate_coef_matrix_5s_diff$sd_ratio_mumax=growthrate_coef_matrix_5s_diff$ratio_mean_mumax*growthrate_coef_matrix_5s_diff$percent_error_squared
growthrate_coef_matrix_5s_diff_ratio=growthrate_coef_matrix_5s_diff %>% filter(taxa!='Flavo71')
p_5s_growth=ggplot(growthrate_coef_matrix_5s_agg)+
geom_bar(aes(fill=taxa,color=substrate, y=mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = mean_mumax + sd_mumax, ymin = mean_mumax-sd_mumax,x=taxa,color=substrate),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=c('#594c0c','darkgrey'))+
scale_fill_manual(values=ASV5palette)+
facet_wrap(~substrate,nrow=1)+ylab('max per capita growth rate /h')+xlab("")+theme_bw()+
theme(legend.position = "bottom",panel.spacing.x=unit(1, "lines"),axis.text.x=element_text(size=12,angle = 45,vjust = 1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
p_5s_growth_ratio=ggplot(growthrate_coef_matrix_5s_diff_ratio)+
geom_bar(aes(fill=taxa, y=ratio_mean_mumax,x=taxa),stat="identity",position = position_dodge(0.6), width=0.8,size=1,alpha=0.6)+
geom_errorbar(aes(ymax = ratio_mean_mumax + sd_ratio_mumax, ymin = ratio_mean_mumax-sd_ratio_mumax,x=taxa,color=taxa),
position =position_dodge(0.6), width=0.2,size=1)+
scale_color_manual(values=ASV5palette)+
scale_fill_manual(values=ASV5palette)+
geom_hline(aes(yintercept=1), color="black", linetype="dashed")+
ylab('Ratio of max.growth rate\n(FE to Mannitol)')+xlab("")+theme_bw()+
theme(legend.position = "none",axis.text.x=element_text(size=12,angle = 45,vjust=1,hjust=1),legend.text = element_text(size=12),axis.title=element_text(size=12),axis.text.y=element_text(size=12))
png('Figures_compiled/growth_curves/max_growth_rate_summary_5s.png',width =2600,height=1100,res=300)
p_5s_growth
dev.off()
png('Figures_compiled/growth_curves/max_growth_rate_ratio_5s.png',width =1200,height=1000,res=300)
p_5s_growth_ratio
dev.off()
library(ggplot2)
library(reshape)
setwd('C:/Users/Xiaoqian/Desktop/seaweed/gas prod/gene_distribution/hyddb90/')
filelist_hyddb = list.files(pattern = ".txt")
filelistname_hyddb=unlist(lapply(filelist_hyddb,function(x) strsplit(x,".",fixed=T)[[1]][1]))
datalist_hyddb = lapply(filelist_hyddb, function(x) read.table(x, fill=T,header=F))
datalist_hyddb_clean = lapply(datalist_hyddb, function(x) x[(x$V3>65) & (x$V4>25),])
hyddb_counts=unlist(lapply(datalist_hyddb_clean, function(x) nrow(x)))
setwd('C:/Users/Xiaoqian/Desktop/seaweed/gas prod/gene_distribution/inulin90/')
filelist_inulin = list.files(pattern = ".txt")
filelistname_inulin=unlist(lapply(filelist_inulin,function(x) strsplit(x,".",fixed=T)[[1]][1]))
datalist_inulin = lapply(filelist_inulin, function(x)
if (file.size(x) > 0){read.table(x, fill=T,header=F)}
else print(0))
datalist_inulin_clean = lapply(datalist_inulin, function(x)
if (x==0) {print (0)}
else {x[(x$V3>35) & (x$V4>25),]})
inulin_counts=unlist(lapply(datalist_inulin_clean, function(x)
if (is.data.frame(x)) {nrow(x)}
else {0}))
setwd('C:/Users/Xiaoqian/Desktop/seaweed/gas prod/gene_distribution/pectin90/')
filelist_pectin = list.files(pattern = ".txt")
filelistname_pectin=unlist(lapply(filelist_pectin,function(x) strsplit(x,".",fixed=T)[[1]][1]))
datalist_pectin = lapply(filelist_pectin, function(x)
if (file.size(x) > 0){read.table(x, fill=T,header=F)}
else print(0))
datalist_pectin_clean = lapply(datalist_pectin, function(x)
if (x==0) {print (0)}
else {x[(x$V3>35) & (x$V4>25),]})
pectin_counts=unlist(lapply(datalist_pectin_clean, function(x)
if (is.data.frame(x)) {nrow(x)}
else {0}))
setwd('C:/Users/Xiaoqian/Desktop/seaweed/gas prod/gene_distribution/metho90/')
filelist_metho = list.files(pattern = ".txt")
filelistname_metho=unlist(lapply(filelist_metho,function(x) strsplit(x,".",fixed=T)[[1]][1]))
datalist_metho = lapply(filelist_metho, function(x)
if (file.size(x) > 0){read.table(x, fill=T,header=F)}
else print(0))
datalist_metho_clean = lapply(datalist_metho, function(x)
if (x==0) {print (0)}
else {x[(x$V3>65) & (x$V4>25),]})
metho_counts=unlist(lapply(datalist_metho_clean, function(x)
if (is.data.frame(x)) {nrow(x)}
else {0}))
setwd('C:/Users/Xiaoqian/Desktop/seaweed/gas prod/gene_distribution/')
gene_length=read.csv('gene_length.csv',row.names = 1)
sample_counts=as.data.frame(metho_counts)
sample_counts$hyddb_counts=hyddb_counts
sample_counts$inulin_counts=inulin_counts[1:176]
sample_counts$pectin_counts=pectin_counts[1:176]
sample_counts=sample_counts[1:160,]  #only use 160, this can count as random sampling b/c there was no selection involved when I got these files
sample_counts$mcrA=sample_counts$metho_counts/((gene_length$average_read_length[5]/1000)*20)+0.000001
sample_counts$`Hydrogenogenic Hydrogenases`=sample_counts$hyddb_counts/((gene_length$average_read_length[4]/1000)*20)+0.000001
sample_counts$`CAZyme (inulin)`=sample_counts$inulin_counts/((gene_length$average_read_length[2]/1000)*20)+0.000001
sample_counts$`CAZyme (pectin)`=sample_counts$pectin_counts/((gene_length$average_read_length[3]/1000)*20)+0.000001
melt_sample_counts=melt(sample_counts[,c(5:8)])
names(melt_sample_counts)=c('metabolism','Reads/Kb per million reads')
hist_all=ggplot(melt_sample_counts, aes(x=`Reads/Kb per million reads`,fill=metabolism,y = 100*4*(..count..)/sum(..count..))) +
# stat_density(aes(y=..density..),alpha=0.3,adjust=1) +
geom_histogram(alpha=0.3,bins=40)+
scale_x_log10("Reads/Kb per million reads", breaks=c(0,1,10,100,1000))+
scale_y_continuous('% Subjects')+
facet_wrap( ~ metabolism,nrow=2)+theme_bw()
hist_all
png('hist_all_160.png',height = 900,width=2400,res=300)
hist_all
dev.off()
png('C:/Users/Xiaoqian/Desktop/seaweed/gas prod/Figures/hist_all_160.png',height = 900,width=2400,res=300)
hist_all
dev.off()
